name: Master Branch CI/CD

on:
  push:
    branches: [master]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Remove package-lock and node_modules (rollup bug workaround)
        run: |
          rm -rf package-lock.json node_modules

      - name: Install dependencies
        run: npm install

      - name: Upload package-lock for consistent dependencies
        uses: actions/upload-artifact@v4
        with:
          name: package-lock
          path: package-lock.json
          retention-days: 1

      - name: Run linting
        run: npm run lint

      - name: Check code formatting
        run: npm run format -- --check

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    env:
      NODE_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Download package-lock from lint job
        uses: actions/download-artifact@v4
        with:
          name: package-lock

      - name: Install dependencies using consistent package-lock
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 30

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: lint
    environment: production
    env:
      NODE_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Download package-lock from lint job
        uses: actions/download-artifact@v4
        with:
          name: package-lock

      - name: Install dependencies using consistent package-lock
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install chromium

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
          E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
          E2E_USERNAME_ID: ${{ secrets.E2E_USERNAME_ID }}

      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 30

  build:
    name: Build for Production
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]
    environment: production
    env:
      NODE_ENV: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Download package-lock from lint job
        uses: actions/download-artifact@v4
        with:
          name: package-lock

      - name: Install dependencies using consistent package-lock
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/
          retention-days: 30

  deploy:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    needs: [build]
    environment: production
    env:
      NODE_ENV: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: dist/

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist --project-name=healthymeal